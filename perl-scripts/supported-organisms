#!/usr/bin/perl
if ($0 =~ /([^(\/)]+)$/) {
    push (@INC, "$`lib/");
}
require "RSA.lib";
#use strict;

$out_format = "text";

@formats = qw (html_list html_table array text keys names sizes full);
foreach $f (@formats) {
    $supported_format{$f} = 1;
}
$formats = join ",", @formats;

&ReadArguments;

print &ListSupportedOrganisms($out_format);


exit(0);

# sub ListSupportedOrganisms {
#   ### usage : &ListSupportedOrganisms($format);
#   ### $supp =  &ListSupportedOrganisms("text");
#   ### $supp =  &ListSupportedOrganisms("html_list");
#   ### $supp =  &ListSupportedOrganisms("html_table");
#   ### @names =  &ListSupportedOrganisms("array");
#   my ($out_format) = @_;

#   if ($out_format eq "html_list") {
#     my $result = "<UL>\n";
#     foreach my $organism_name (sort keys %supported_organism) {
#       $result .= "<LI>";
#       $result .= $supported_organism{$organism_name}->{name};
#       $result .= "\n";
#     }
#     $result .= "</UL>\n";
#     return $result;
#   } elsif ($out_format eq "html_table") {
#     my $result = "<TABLE>\n";
#     foreach my $organism_name (sort keys %supported_organism) {
#       $result .= "<TR>\n";
#       $result .= "<TD>$organism_name</TD>\n";
#       $result .= "<TD>";
#       $result .= $supported_organism{$organism_name}->{name};
#       $result .= "</TD>\n";
#       $result .= "</TR>\n";
#     }
#     $result .= "</TABLE>\n";
#     return $result;
#   } elsif ($out_format eq "array") {
#     my @result = ();
#     foreach my $organism_name (sort keys %supported_organism) {
#       push @result, $supported_organism{$organism_name}->{name};
#     }
#     return @result;
#   }else {
#     return $supported_organisms; 
#   }
# }

########################## subroutine definition ############################

sub PrintHelp {
#### display full help message #####
  open HELP, "| more";
  print HELP <<End_of_help;
NAME
	supported-organisms

        2002 by Jacques van Helden (jvanheld\@ucmb.ulb.ac.be)
	
USAGE
        supported-organisms [-i inputfile] [-o outputfile] [-v]

DESCRIPTION
	Returns the list of organisms supported on this site of
	rsa-tools.

CATEGORY
	genomics
	administration

OPTIONS
	-h	(must be first argument) display full help message
	-help	(must be first argument) display options
	-format	output format
		supported: $formats
End_of_help
  close HELP;
  exit;
}

sub PrintOptions {
#### display short help message #####
  open HELP, "| more";
  print HELP <<End_short_help;
template options
----------------
-h	(must be first argument) display full help message
-help	(must be first argument) display options
-i	input file
-o	output file
-v	verbose
-format	output format ($formats)
End_short_help
  close HELP;
  exit;
}


sub ReadArguments {
#### read arguments ####
    foreach my $a (0..$#ARGV) {
	### verbose ###
	if ($ARGV[$a] eq "-v") {
	    if (&IsNatural($ARGV[$a+1])) {
		$verbose = $ARGV[$a+1];
	    } else {
		$verbose = 1;
	    }
	    
	    ### detailed help
	} elsif ($ARGV[$a] eq "-h") {
	    &PrintHelp;
	    
	    ### list of options
	} elsif ($ARGV[0] eq "-help") {
	    &PrintOptions;
	    
	    ### input file ###
	} elsif ($ARGV[$a] eq "-format") {
	    $out_format = $ARGV[$a+1];
	    unless ($supported_format{$out_format}) {
		&FatalError("Format $out_format is not supported\n");
	    }
	    
	}
    }
}
