#!/usr/bin/perl
if ($0 =~ /([^(\/)]+)$/) {
    push (@INC, "$`lib/");
}
require "RSA.lib.pl";



### this script generates families encomprizing 7 upstream sequences
### from the yeast genome. Fa;ilies are assembled at random
### these sequences are then submitted to an hexanucleotide analysis
### the aim is to describe the expected distribution of the sig parameter.


$orf_pos_file = "$RSA/data/yeast/orfs/ORF_table.txt";
$OLI = "$RSA/data/yeast/oligo-frequencies//";

$genes_per_family = 7;
$repetitions = 5000;
$oligo_length = 6;

@orf_list = `cat $orf_file`;
$orf_nb = $#orf_list +1;
$resultfile = "random-family-analysis.${oligo_length}nt.${genes_per_family}g.${repetitions}r.res";

srand (time);

for $r (1..$repetitions) {
    open ANALYSIS, "| retrieve-seq -type upstream | oligo-analysis -format IG -expfreq $RSA/data/yeast/oligo-frequencies//${oligo_length}nt.non-coding.freq -l $oligo_length -thsig 0 -occ -proba -v >> $resultfile";

    for $g (1..$genes_per_family) {
	$line[$g] = int rand($orf_nb);
	print  ANALYSIS "$orf_list[$line[$g]]";
    }

    close ANALYSIS;
}
