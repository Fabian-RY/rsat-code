#!/usr/bin/perl
if ($0 =~ /([^(\/)]+)$/) {
    push (@INC, "$`lib/");
}
require "RSA.lib.pl";



if ($ARGV[0] eq "-h") {
#### display full help message #####
  open HELP, "| more";
  print HELP <<End_of_help;
NAME
	orf-synonyms

        1998 by Jacques van Helden (jacques\@ucmb.ulb.ac.be)
	
USAGE
	orf-synonyms query_string
        orf-synonyms [-i inputfile] [-o outputfile] [-v]
	orf-synonyms -q query1 -q query2 -q ...

DESCRIPTION
	Provides a list of synonyms for a query yeast gene name.
	
OPTIONS
        -h      (must be first argument) display full help message
        -help   (must be first argument) display options
	-v	verbose
	-i inputfile
		if not specified, the standard input is used.
		This allows to place the command within a pipe.
	-o outputfile
		if not specified, the standard output is used.
		This allows to place the command within a pipe.
		
	
INPUT FORMAT
	
	
OUTPUT FORMAT
	
	
EXAMPLES
       orf-synonyms pho2
	
End_of_help
  close HELP;
  exit;
}

if ($ARGV[0] eq "-help") {
#### display short help message #####
  open HELP, "| more";
  print HELP <<End_short_help;
orf-synonyms options
----------------
-h      (must be first argument) display full help message
-help   (must be first argument) display options
-i      input file
-o      output file
-v      verbose
End_short_help
  close HELP;
  exit;
}

#### initialise parameters ####
$start_time = `date '+%d/%m/%y %H:%M:%S %Z'`;


#### read arguments ####
foreach $a (0..$#ARGV) {
    ### verbose ###
    if ($ARGV[$a] eq "-v") {
	$verbose = 1;
    ### input file ###
    } elsif ($ARGV[$a] eq "-i") {
	$inputfile = $ARGV[$a+1];
    ### output file ###
    } elsif ($ARGV[$a] eq "-o") {
	$outputfile = $ARGV[$a+1];

    ### query ###
    } elsif ($ARGV[$a] eq "-q") {
	push @query_list, $ARGV[$a+1];

    }
}


#### check argument values ####


### read queries if not yet specified ###
if ($#query_list < 0) {
    if ($inputfile eq "") {
	@query_list = ($ARGV[$#ARGV]);
    } else {
	$in = &OpenInputFile($inputfile);
	while (<$in>) {
	    next if (/^;/); # comment line
	    if (/^\s*(\S+)/) { # take first word of the line
		push @query_list, $1;
	    }
	}
    }
}

### open output file ###
$out = &OpenOutputFile($outputfile);

### read synonym file ###
&ReadOrfPositions;
&ReadSynonyms;

#### verbose ####
if ($verbose) {
    print $out ";orf-synonyms result\n";
    if ($inputfile ne "") {
	print $out ";Input file	$inputfile\n";
    }
    if ($outputfile ne "") {
	print $out ";Output file	$outputfile\n";
    }
    print $out ";query\tsynonyms\n";
}

###### print output ######
foreach $query (@query_list) {
    $query = uc($query);
    print $out "$query\t";
    $orf_id = $orf_id{$query};
    print $out "$orf_id\t";

    foreach $synonym (@{$synonyms{$orf_id}}) {
	    print $out "$synonym;";
    }
    print $out "\n";
}


###### verbose ######
if ($verbose) {
    $done_time = `date '+%d/%m/%y %H:%M:%S %Z'`;
    print $out ";Job started $start_time";
    print $out ";Job done    $done_time";
}


###### close input file ######
close $in unless ($inputfile eq "");

###### close output file ######
close $out unless ($outputfile eq "");


exit(0);


########################## subroutine definition ############################

