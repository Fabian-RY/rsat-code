################################################################
## Prepare a release version of rsa-tools
## distribution.mk makefile
## Usage: make -f distribution.mk

include ${RSAT}/makefiles/util.mk
MAKEFILE=${RSAT}/makefiles/distribution.mk
MAKE = make -sk -f ${MAKEFILE}

## Archive file
DATE=`date +%Y-%m-%d`
ARCHIVE_PREFIX=rsa-tools_${DATE}
ARCHIVE_PREFIX_METAB=metabolic-tools_${DATE}
ARCHIVE=rsa-tools/${ARCHIVE_PREFIX}

## Archive with tar
#TAR_EXCLUDE=-X CVS '*~' 
TAR_EXCLUDE=--exclude CVS
TAR_CREATE =tar ${TAR_EXCLUDE} -cpvf ${ARCHIVE}.tar rsa-tools/RSA.config.default rsa-tools/RSAT_config_default.props  rsa-tools/RSAT_config_default.mk
TAR =tar ${TAR_EXCLUDE} -rpvf ${ARCHIVE}.tar 

################################################################
## All the tasks for publishing the new version
all: clean_emacs_bk tar_archive clean_distrib_site publish

## List parameters
SSH_OPT=
PUB_FORMAT=tar.gz
list_params:
	@echo "RSAT distribution parameters"
	@echo "	ARCHIVE		${ARCHIVE}"
	@echo "The following parameters have to be specified by RSAT administrator"
	@echo "	PUB_LOGIN	${PUB_LOGIN}"
	@echo "	PUB_SERVER	${PUB_SERVER}"
	@echo "	PUB_DIR		${PUB_DIR}"

################################################################
## Generate the Manuals and tutorials
manuals:
	(cd doc/manuals; make fullclean; make install_guide; make rsat_tutorial; make neat_tutorial; make web_server_guide; make tex_clean)
	rsync -rtupvl -e "ssh ${SSH_OPT}" doc/manuals/*.pdf public_html/distrib

## Install manuals on the RSAT Web server
publish_manuals:
	rsync -rtupvl -e "ssh ${SSH_OPT}" doc/manuals/*.pdf rsat@rsat.bigre.ulb.ac.be:rsa-tools/public_html/distrib/


################################################################
## Clean temporary backup files generated by emacs
CLEAN_DIRS=perl-scripts makefiles doc ws_clients
clean_emacs_bk:
	@for dir in ${CLEAN_DIRS}; do \
		echo "	Cleaning directory" $${dir} ; \
		find $${dir} -name '*~' -exec rm {} \; ; \
		find $${dir} -name '.#*' -exec rm {} \; ; \
		find $${dir} -name '#*' -exec rm {} \; ; \
	done
	@echo "	Cleaning directory public_html"
	@rm -f public_html/*~ public_html/.#* public_html/#*
	@rm -f public_html/tutorials/*~ public_html/tutorials/.#* public_html/tutorials/#*

################################################################
## Create tar and zip archives of the whole distribution
POST_CMD=
TAR_ROOT=..
DISTRIB_FILES=rsa-tools/perl-scripts		\
	rsa-tools/RSA.config.default		\
	rsa-tools/RSA.config.default		\
	rsa-tools/makefiles			\
	rsa-tools/doc/manuals/*.pdf		\
	rsa-tools/python-scripts 		\
	rsa-tools/contrib/count-words  		\
	rsa-tools/contrib/matrix-scan-quick  	\
	rsa-tools/contrib/floydwarshall		\
	rsa-tools/ws_clients		  	\
	rsa-tools/contrib/info-gibbs

DISTRIB_FILES_METAB=rsa-tools/java	\
	rsa-tools/contrib/REA		\
	rsa-tools/contrib/kwalks

_create_tar_archive:
	@echo ${TAR_CREATE} 
	(cd ${TAR_ROOT}; ${TAR_CREATE})

FILE=rsa-tools/perl-scripts
_add_one_file:
	@echo ${ARCHIVE_CMD} ${FILE} ${POST_CMD}
	${ARCHIVE_CMD} ${FILE}  ${POST_CMD}


_fill_archive:
	(cd ${TAR_ROOT};				\
	for f in ${DISTRIB_FILES}; do			\
		${MAKE} _add_one_file FILE=$${f};	\
	done)
	@echo "Archive created	${ARCHIVE}"

## Create an archive with RSAT/NeAT tools
tar_archive:
	${MAKE} _create_tar_archive
	${MAKE} _fill_archive ARCHIVE_CMD='${TAR}' POST_CMD=''
	(cd ${TAR_ROOT}; gzip -f ${ARCHIVE}.tar)

## Create an archive with the metabolic tools (since the java files occupy 80Mb, we distribute them separately
tar_archive_metab:
	${MAKE} tar_archive ARCHIVE_PREFIX=${ARCHIVE_PREFIX_METAB} DISTRIB_FILES="${DISTRIB_FILES_METAB}"

## Archive with zip
ZIP_EXCLUDE=-x CVS '*~' 
ZIP =zip -ry ${ARCHIVE}.zip 
zip_archive:
	${MAKE} _fill_archive ARCHIVE_CMD='${ZIP}' POST_CMD='${ZIP_EXCLUDE}'


ls_distrib:
	ssh ${SSH_OPT} ${PUB_LOGIN}@${PUB_SERVER} "ls -ltra ${PUB_DIR}/"

clean_distrib_site:
	ssh ${SSH_OPT} ${PUB_LOGIN}@${PUB_SERVER} "mv -f ${PUB_DIR}/rsa-tools_*.tar.gz ${PUB_DIR}/previous_versions/"

################################################################
## Publish the tar archive of the whole distribution
publish:
	rsync -ruptvl -e "ssh ${SSH_OPT}" ${ARCHIVE_PREFIX}.${PUB_FORMAT} ${PUB_LOGIN}@${PUB_SERVER}:${PUB_DIR}

publish_metab:
	@${MAKE} publish ARCHIVE_PREFIX=${ARCHIVE_PREFIX_METAB}

################################################################
## Make a tar archive of the ws clients
TAR_WSCLIENTS=public_html/web_services/RSATWS_clients.tar.gz
tar_wsclients:
	@rm -f ${TAR_WSCLIENTS}
	tar --exclude CVS  --exclude '*~' --exclude '*.DS_Store' -cvpzf ${TAR_WSCLIENTS} ws_clients
	@echo ${TAR_WSCLIENTS}

publish_tar_wsclients:
	rsync -ruptvl -e "ssh ${SSH_OPT}" ${TAR_WSCLIENTS} rsat@rsat.bigre.ulb.ac.be:rsa-tools/public_html/web_services/

