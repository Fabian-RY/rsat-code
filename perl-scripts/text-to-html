#!/usr/bin/perl
if ($0 =~ /([^(\/)]+)$/) {
    push (@INC, "$`lib/");
}
require "RSA.lib.pl";
require "RSA_cgi_lib.pl";


require "cgi-lib.pl";

if ($ARGV[0] eq "-h") {
#### display full help message #####
  open HELP, "| more";
  print HELP <<End_of_help;
NAME
	text-to-html

        1998 by Jacques van Helden (jacques\@ucmb.ulb.ac.be)
	
USAGE
        text-to-html [-i inputfile] [-o outputfile] [-v] [-font variable]

DESCRIPTION
	
OPTIONS
        -h      (must be first argument) display full help message
        -help   (must be first argument) display options
	-v	verbose
	-i inputfile
		if not specified, the standard input is used.
		This allows to place the command within a pipe.
	-o outputfile
		if not specified, the standard output is used.
		This allows to place the command within a pipe.
	-font variable
		use variable instead of fixed fonts
	
INPUT FORMAT
	A tab-delimited text file
	
OUTPUT FORMAT
	An HTML file with a HTML table.
		
EXAMPLES
       text-to-html -v -i mydata -o myresult
	
End_of_help
  close HELP;
  exit;
}

if ($ARGV[0] eq "-help") {
#### display short help message #####
  open HELP, "| more";
  print HELP <<End_short_help;
text-to-html options
----------------
-h      (must be first argument) display full help message
-help   (must be first argument) display options
-i      input file
-o      output file
-v      verbose
-font	variable
End_short_help
  close HELP;
  exit;
}

#### initialise parameters ####
$start_time = `date '+%d/%m/%y %H:%M:%S %Z'`;


#### read arguments ####
foreach $a (0..$#ARGV) {
    ### verbose ###
    if ($ARGV[$a] eq "-v") {
	$verbose = 1;
    ### input file ###
    } elsif ($ARGV[$a] eq "-i") {
	$inputfile = $ARGV[$a+1];
    ### output file ###
    } elsif ($ARGV[$a] eq "-o") {
	$outputfile = $ARGV[$a+1];
    ### input file ###
    } elsif (($ARGV[$a] eq "-font") && ($ARGV[$a+1] =~ /^var/i)) {
	$font{variable} = 1;

    }
}


#### check argument values ####



### open input file ###
$in = &OpenInputFile($inputfile);

### open output file ###
$out = &OpenOutputFile($outputfile);

#### verbose ####
if ($verbose) {
    print $out ";text-to-html result\n";
    if ($inputfile ne "") {
	print $out ";Input file	$inputfile\n";
    }
    if ($outputfile ne "") {
	print $out ";Output file	$outputfile\n";
    }
}

###### execute the command #########
print &HtmlTop ($inputfile);    

&PrintHtmlTable($in);

print &HtmlBot;

###### print output ######




###### verbose ######
if ($verbose) {
    $done_time = `date '+%d/%m/%y %H:%M:%S %Z'`;
    print $out ";Job started $start_time";
    print $out ";Job done    $done_time";
}


###### close input file ######
close $in unless ($inputfile eq "");

###### close output file ######
close $out unless ($outputfile eq "");


exit(0);


########################## subroutine definition ############################

